<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<variable name="BackgroundSource">
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value>$INFO[Container(90000).ListItem.Art(fanart)]</value>
	</variable>
	<variable name="DefaultIcon">
		<!--folder-->
		<value condition="true">î‹‡</value>
	</variable>
	<variable name="FakeButtonAddonInfo13">
		<value condition="String.EndsWith(Control.GetLabel(13),(*))">$LOCALIZE[19074]</value>
		<value>$LOCALIZE[351]</value>
	</variable>
	<variable name="ContainerContent">
		<value condition="Window.IsVisible(1120)">$LOCALIZE[342]</value>
		<value condition="Window.IsVisible(1121)">$LOCALIZE[20343]</value>
		<value condition="Window.IsVisible(1122)">$LOCALIZE[2]</value>
		<value condition="Window.IsVisible(1123)">$LOCALIZE[24001]</value>
		<value condition="Window.IsVisible(1124)">$LOCALIZE[14204]</value>
		<value condition="Window.IsVisible(movieinformation) + String.IsEqual(ListItem.DBType,tvshow)">$LOCALIZE[20351]</value>
		<value condition="Window.IsVisible(movieinformation) + String.IsEqual(ListItem.DBType,movie)">$LOCALIZE[10524]</value>
		<value condition="!String.IsEmpty(Container.ShowTitle)">$INFO[Container.ShowTitle]</value>
		<value condition="Window.IsVisible(MyPVRGuide.xml)">$LOCALIZE[19069]</value>
		<value condition="Window.IsVisible(MyPVRRecordings.xml)">$LOCALIZE[19017]</value>
		<value condition="String.StartsWith(Container.FolderPath,videodb://movies)">$LOCALIZE[342]</value>
		<value condition="String.StartsWith(Container.FolderPath,videodb://tvshows)">$LOCALIZE[20343]</value>
		<value condition="String.StartsWith(Container.FolderPath,musicdb://)">$LOCALIZE[2]</value>
		<value>$INFO[Container.Foldername]</value>
	</variable>
	<variable name="IconLandscape">
		<value condition="[[Control.IsVisible(54) + Container.Content(seasons)] | Window.IsVisible(movieinformation)] + !String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value condition="[[Control.IsVisible(54) + Container.Content(seasons)] | Window.IsVisible(movieinformation)] + !String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
		<value condition="[[Control.IsVisible(54) + Container.Content(seasons)] | Window.IsVisible(movieinformation)] + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="[[Control.IsVisible(54) + Container.Content(seasons)] | Window.IsVisible(movieinformation)] + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="String.StartsWith(ListItem.Path,pvr://) + !String.StartsWith(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
		<value condition="!String.IsEmpty(ListItem.Art(thumb)) + Container.Content(episodes)">$INFO[ListItem.Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(Thumb))">$INFO[ListItem.Art(Thumb)]</value>
	</variable>
	<variable name="IconPoster">
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
	</variable>
	<variable name="IconSquare">
		<value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
	</variable>
	<variable name="MainListLabel">
		<value condition="String.StartsWith(ListItem.Path,pvr://) + !String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
		<value condition="String.StartsWith(ListItem.Path,pvr://)">$INFO[ListItem.Label]</value>
		<value condition="String.IsEqual(ListItem.DBType,episode)">$INFO[ListItem.Season,S,:]$INFO[ListItem.Episode,E, ]$INFO[ListItem.Title]</value>
		<value condition="String.IsEqual(ListItem.DBType,season) + !String.IsEmpty(ListItem.Season)">$INFO[ListItem.Season,$LOCALIZE[20373] ]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="SubListLabel">
		<value condition="String.StartsWith(ListItem.Path,pvr://)">$INFO[ListItem.Label]</value>
		<value condition="String.IsEqual(ListItem.DBType,episode)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="String.IsEqual(ListItem.DBType,season)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="String.IsEqual(ListItem.DBType,movie)">$INFO[ListItem.Year]</value>
		<value condition="String.IsEqual(ListItem.DBType,tvshow)">$INFO[ListItem.Year]</value>
	</variable>
	<variable name="VisibleContainer">
		<value condition="Control.IsVisible(50)">50</value>
		<value condition="Control.IsVisible(51)">51</value>
		<value condition="Control.IsVisible(52)">52</value>
		<value condition="Control.IsVisible(53)">53</value>
		<value condition="Control.IsVisible(54)">54</value>
		<value condition="Control.IsVisible(55)">55</value>
	</variable>
	<variable name="ListItemResolution">
		<value condition="Integer.IsLess(ListItem.VideoResolution,710)">SD</value>
		<value condition="[Integer.IsGreater(ListItem.VideoResolution,710) + !Integer.IsGreater(ListItem.VideoResolution,730)]">720p</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,1080)">1080p</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,4K)">4K</value>
	</variable>
	<variable name="ListItemAudio">
		<value condition="Integer.IsEqual(ListItem.AudioChannels,1)">Mono</value>
		<value condition="Integer.IsEqual(ListItem.AudioChannels,2)">Stereo</value>
		<value condition="Integer.IsGreater(ListItem.AudioChannels,2) + !String.Contains(ListItem.AudioCodec,dtshd) + [String.Contains(ListItem.AudioCodec,dca) | String.Contains(ListItem.AudioCodec,dts)]">DTS</value>
		<value condition="Integer.IsGreater(ListItem.AudioChannels,2) + String.Contains(ListItem.AudioCodec,dtshd)">DTS-HD</value>
		<value condition="Integer.IsGreater(ListItem.AudioChannels,2) + String.Contains(ListItem.AudioCodec,ac3) + !String.Contains(ListItem.AudioCodec,eac3)">Dolby</value>
		<value condition="Integer.IsGreater(ListItem.AudioChannels,2) + String.Contains(ListItem.AudioCodec,eac3)">Dolby+</value>
		<value condition="Integer.IsGreater(ListItem.AudioChannels,2) + String.Contains(ListItem.AudioCodec,truehd)">TrueHD</value>
		<value condition="Integer.IsGreater(ListItem.AudioChannels,2) + !String.Contains(ListItem.AudioCodec,ac3) + !String.Contains(ListItem.AudioCodec,truehd) + !String.Contains(ListItem.AudioCodec,dts) + !String.Contains(ListItem.AudioCodec,dca)">Multi Ch.</value>
	</variable>
	<variable name="VideoInfoButton8">
		<value condition="!String.IsEqual(ListItem.DBType,tvshow) + !String.IsEqual(ListItem.DBType,season) + ListItem.IsResumable">$LOCALIZE[13404]</value>
		<value condition="!String.IsEqual(ListItem.DBType,tvshow) + !String.IsEqual(ListItem.DBType,season) + Integer.IsGreater(ListItem.PlayCount,0)">$LOCALIZE[31009]</value>
		<value condition="!String.IsEqual(ListItem.DBType,tvshow) + !String.IsEqual(ListItem.DBType,season)">$LOCALIZE[31010]</value>
		<value>$LOCALIZE[31011]</value>
	</variable>
	<variable name="TinyInfoDialogHeadline">
		<value condition="!String.IsEmpty(ListItem.DBType,TvShowTitle)">$INFO[ListItem.TvShowTitle]</value>
		<value>$INFO[ListItem.Title]</value>
	</variable>
	<variable name="TinyInfoDialogPlot">
		<value condition="String.IsEqual(ListItem.DBType,Episode)">$INFO[ListItem.Season,S,:]$INFO[ListItem.Episode,E, ]$INFO[ListItem.Title,,[CR][CR]]$INFO[ListItem.Duration,$LOCALIZE[180]: , $LOCALIZE[12391][CR][CR]]$INFO[ListItem.Plot]</value>
		<value>$INFO[ListItem.Plot]</value>
	</variable>
	<variable name="ListViewPlot">
		<value condition="Window.IsVisible(tvrecordings)">$INFO[ListItem.Plot]</value>
		<value>$INFO[ListItem.Tagline,[B],[/B][CR][CR]]$INFO[ListItem.Plot]</value>
	</variable>
	<variable name="PVRTimerIcon">
		<value condition="ListItem.IsRecording">icons/pvr/icon_recording.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasError">icons/pvr/icon_timer_error.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasError">icons/pvr/icon_record_error.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasConflict">icons/pvr/icon_timer_conflict.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasConflict">icons/pvr/PVR-HasTimerConflict.png</value>
		<value condition="ListItem.HasRecording">icons/pvr/icon_recording.png</value>
		<value condition="ListItem.HasTimerSchedule">icons/pvr/icon_timer.png</value>
		<value condition="ListItem.HasTimer">icons/pvr/icon_recording.png</value>
	</variable>
	<variable name="PVRTimerStatus">
		<value condition="!ListItem.TimerIsActive">deaktiviert</value>
		<value>aktiv</value>
	</variable>
	<variable name="TuneInLabel">
		<value condition="VideoPlayer.Content(livetv)">$LOCALIZE[19165]</value>
		<value>$LOCALIZE[31020]</value>
	</variable>
	<variable name="ExtendedProgressCircle">
		<value condition="String.IsEqual(Control.GetLabel(32),100)">100</value>
		<value condition="String.IsEqual(Control.GetLabel(32),99)">99</value>
		<value condition="String.IsEqual(Control.GetLabel(32),98)">98</value>
		<value condition="String.IsEqual(Control.GetLabel(32),97)">97</value>
		<value condition="String.IsEqual(Control.GetLabel(32),96)">96</value>
		<value condition="String.IsEqual(Control.GetLabel(32),95)">95</value>
		<value condition="String.IsEqual(Control.GetLabel(32),94)">94</value>
		<value condition="String.IsEqual(Control.GetLabel(32),93)">93</value>
		<value condition="String.IsEqual(Control.GetLabel(32),92)">92</value>
		<value condition="String.IsEqual(Control.GetLabel(32),91)">91</value>
		<value condition="String.IsEqual(Control.GetLabel(32),90)">90</value>
		<value condition="String.IsEqual(Control.GetLabel(32),89)">89</value>
		<value condition="String.IsEqual(Control.GetLabel(32),88)">88</value>
		<value condition="String.IsEqual(Control.GetLabel(32),87)">87</value>
		<value condition="String.IsEqual(Control.GetLabel(32),86)">86</value>
		<value condition="String.IsEqual(Control.GetLabel(32),85)">85</value>
		<value condition="String.IsEqual(Control.GetLabel(32),84)">84</value>
		<value condition="String.IsEqual(Control.GetLabel(32),83)">83</value>
		<value condition="String.IsEqual(Control.GetLabel(32),82)">82</value>
		<value condition="String.IsEqual(Control.GetLabel(32),81)">81</value>
		<value condition="String.IsEqual(Control.GetLabel(32),80)">80</value>
		<value condition="String.IsEqual(Control.GetLabel(32),79)">79</value>
		<value condition="String.IsEqual(Control.GetLabel(32),78)">78</value>
		<value condition="String.IsEqual(Control.GetLabel(32),77)">77</value>
		<value condition="String.IsEqual(Control.GetLabel(32),76)">76</value>
		<value condition="String.IsEqual(Control.GetLabel(32),75)">75</value>
		<value condition="String.IsEqual(Control.GetLabel(32),74)">74</value>
		<value condition="String.IsEqual(Control.GetLabel(32),73)">73</value>
		<value condition="String.IsEqual(Control.GetLabel(32),72)">72</value>
		<value condition="String.IsEqual(Control.GetLabel(32),71)">71</value>
		<value condition="String.IsEqual(Control.GetLabel(32),70)">70</value>
		<value condition="String.IsEqual(Control.GetLabel(32),69)">69</value>
		<value condition="String.IsEqual(Control.GetLabel(32),68)">68</value>
		<value condition="String.IsEqual(Control.GetLabel(32),67)">67</value>
		<value condition="String.IsEqual(Control.GetLabel(32),66)">66</value>
		<value condition="String.IsEqual(Control.GetLabel(32),65)">65</value>
		<value condition="String.IsEqual(Control.GetLabel(32),64)">64</value>
		<value condition="String.IsEqual(Control.GetLabel(32),63)">63</value>
		<value condition="String.IsEqual(Control.GetLabel(32),62)">62</value>
		<value condition="String.IsEqual(Control.GetLabel(32),61)">61</value>
		<value condition="String.IsEqual(Control.GetLabel(32),60)">60</value>
		<value condition="String.IsEqual(Control.GetLabel(32),59)">59</value>
		<value condition="String.IsEqual(Control.GetLabel(32),58)">58</value>
		<value condition="String.IsEqual(Control.GetLabel(32),57)">57</value>
		<value condition="String.IsEqual(Control.GetLabel(32),56)">56</value>
		<value condition="String.IsEqual(Control.GetLabel(32),55)">55</value>
		<value condition="String.IsEqual(Control.GetLabel(32),54)">54</value>
		<value condition="String.IsEqual(Control.GetLabel(32),53)">53</value>
		<value condition="String.IsEqual(Control.GetLabel(32),52)">52</value>
		<value condition="String.IsEqual(Control.GetLabel(32),51)">51</value>
		<value condition="String.IsEqual(Control.GetLabel(32),50)">50</value>
		<value condition="String.IsEqual(Control.GetLabel(32),49)">49</value>
		<value condition="String.IsEqual(Control.GetLabel(32),48)">48</value>
		<value condition="String.IsEqual(Control.GetLabel(32),47)">47</value>
		<value condition="String.IsEqual(Control.GetLabel(32),46)">46</value>
		<value condition="String.IsEqual(Control.GetLabel(32),45)">45</value>
		<value condition="String.IsEqual(Control.GetLabel(32),44)">44</value>
		<value condition="String.IsEqual(Control.GetLabel(32),43)">43</value>
		<value condition="String.IsEqual(Control.GetLabel(32),42)">42</value>
		<value condition="String.IsEqual(Control.GetLabel(32),41)">41</value>
		<value condition="String.IsEqual(Control.GetLabel(32),40)">40</value>
		<value condition="String.IsEqual(Control.GetLabel(32),39)">39</value>
		<value condition="String.IsEqual(Control.GetLabel(32),38)">38</value>
		<value condition="String.IsEqual(Control.GetLabel(32),37)">37</value>
		<value condition="String.IsEqual(Control.GetLabel(32),36)">36</value>
		<value condition="String.IsEqual(Control.GetLabel(32),35)">35</value>
		<value condition="String.IsEqual(Control.GetLabel(32),34)">34</value>
		<value condition="String.IsEqual(Control.GetLabel(32),33)">33</value>
		<value condition="String.IsEqual(Control.GetLabel(32),32)">32</value>
		<value condition="String.IsEqual(Control.GetLabel(32),31)">31</value>
		<value condition="String.IsEqual(Control.GetLabel(32),30)">30</value>
		<value condition="String.IsEqual(Control.GetLabel(32),29)">29</value>
		<value condition="String.IsEqual(Control.GetLabel(32),28)">28</value>
		<value condition="String.IsEqual(Control.GetLabel(32),27)">27</value>
		<value condition="String.IsEqual(Control.GetLabel(32),26)">26</value>
		<value condition="String.IsEqual(Control.GetLabel(32),25)">25</value>
		<value condition="String.IsEqual(Control.GetLabel(32),24)">24</value>
		<value condition="String.IsEqual(Control.GetLabel(32),23)">23</value>
		<value condition="String.IsEqual(Control.GetLabel(32),22)">22</value>
		<value condition="String.IsEqual(Control.GetLabel(32),21)">21</value>
		<value condition="String.IsEqual(Control.GetLabel(32),20)">20</value>
		<value condition="String.IsEqual(Control.GetLabel(32),19)">19</value>
		<value condition="String.IsEqual(Control.GetLabel(32),18)">18</value>
		<value condition="String.IsEqual(Control.GetLabel(32),17)">17</value>
		<value condition="String.IsEqual(Control.GetLabel(32),16)">16</value>
		<value condition="String.IsEqual(Control.GetLabel(32),15)">15</value>
		<value condition="String.IsEqual(Control.GetLabel(32),14)">14</value>
		<value condition="String.IsEqual(Control.GetLabel(32),13)">13</value>
		<value condition="String.IsEqual(Control.GetLabel(32),12)">12</value>
		<value condition="String.IsEqual(Control.GetLabel(32),11)">11</value>
		<value condition="String.IsEqual(Control.GetLabel(32),10)">10</value>
		<value condition="String.EndsWith(Control.GetLabel(32),9)">9</value>
		<value condition="String.EndsWith(Control.GetLabel(32),8)">8</value>
		<value condition="String.EndsWith(Control.GetLabel(32),7)">7</value>
		<value condition="String.EndsWith(Control.GetLabel(32),6)">6</value>
		<value condition="String.EndsWith(Control.GetLabel(32),5)">5</value>
		<value condition="String.EndsWith(Control.GetLabel(32),4)">4</value>
		<value condition="String.EndsWith(Control.GetLabel(32),3)">3</value>
		<value condition="String.EndsWith(Control.GetLabel(32),2)">2</value>
		<value condition="String.EndsWith(Control.GetLabel(32),1)">1</value>
	</variable>
	<variable name="ListItemDuration">
		<value condition="String.Contains(ListItem.Duration,:)">$INFO[ListItem.Duration]</value>
		<value>$INFO[ListItem.Duration,, $LOCALIZE[12391]]</value>
	</variable>
	<variable name="PVRGenreColors">
		<value condition="String.IsEqual(ListItem.Property(GenreType),0)">grid_label</value>
		<value condition="String.IsEqual(ListItem.Property(GenreType),16)">blue</value>
		<value condition="String.IsEqual(ListItem.Property(GenreType),32)">grid_label</value>
		<value condition="String.IsEqual(ListItem.Property(GenreType),48)">turquoise</value>
		<value condition="String.IsEqual(ListItem.Property(GenreType),64)">red</value>
		<value condition="String.IsEqual(ListItem.Property(GenreType),80)">orange</value>
		<value condition="String.IsEqual(ListItem.Property(GenreType),96)">grid_label</value>
		<value condition="String.IsEqual(ListItem.Property(GenreType),112)">grid_label</value>
		<value condition="String.IsEqual(ListItem.Property(GenreType),128)">grid_label</value>
		<value condition="String.IsEqual(ListItem.Property(GenreType),144)">grid_label</value>
		<value condition="String.IsEqual(ListItem.Property(GenreType),160)">grid_label</value>
		<value condition="String.IsEqual(ListItem.Property(GenreType),176)">grid_label</value>
		<value condition="String.IsEqual(ListItem.Property(GenreType),192)">grid_label</value>
		<value condition="String.IsEqual(ListItem.Property(GenreType),208)">grid_label</value>
		<value condition="String.IsEqual(ListItem.Property(GenreType),224)">grid_label</value>
		<value condition="String.IsEqual(ListItem.Property(GenreType),240)">grid_label</value>
		<value>grid_label</value>
		<!--0 = other/unknown
		16 = moviedrama
		32 = news
		48 = show
		64 = sports
		80 = child
		96 = music
		112 = arts
		128 = social
		144 = science
		160 = hobby
		176 = special
		192 = other/unknown
		208 = other/unknown
		224 = other/unknown
		240 = other/unknown-->
	</variable>
</includes>