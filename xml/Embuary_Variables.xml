<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<variable name="DefaultIcon">
		<!--folder-->
		<value condition="true">î‹‡</value>
	</variable>
	<variable name="ContainerContent">
		<value condition="Window.IsVisible(1120)">$LOCALIZE[342]</value>
		<value condition="Window.IsVisible(1121)">$LOCALIZE[20343]</value>
		<value condition="Window.IsVisible(movieinformation) + String.IsEqual(ListItem.DBType,tvshow)">$LOCALIZE[20351]</value>
		<value condition="Window.IsVisible(movieinformation) + String.IsEqual(ListItem.DBType,movie)">$LOCALIZE[10524]</value>
		<value condition="!String.IsEmpty(Container.ShowTitle)">$INFO[Container.ShowTitle]</value>
		<value condition="Window.IsVisible(tvguide) | Window.IsVisible(radioguide)">$LOCALIZE[19069]</value>
		<value condition="String.StartsWith(Container.FolderPath,videodb://movies)">$LOCALIZE[342]</value>
		<value condition="String.StartsWith(Container.FolderPath,videodb://tvshows)">$LOCALIZE[20343]</value>
		<value condition="String.StartsWith(Container.FolderPath,musicdb://)">$LOCALIZE[2]</value>
		<value>$INFO[Container.Foldername]</value>
	</variable>
	<variable name="IconLandscape">
		<value condition="[[Control.IsVisible(54) + Container.Content(seasons)] | Window.IsVisible(movieinformation)] + !String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value condition="[[Control.IsVisible(54) + Container.Content(seasons)] | Window.IsVisible(movieinformation)] + !String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
		<value condition="[[Control.IsVisible(54) + Container.Content(seasons)] | Window.IsVisible(movieinformation)] + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="[[Control.IsVisible(54) + Container.Content(seasons)] | Window.IsVisible(movieinformation)] + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="String.StartsWith(ListItem.Path,pvr://)">$INFO[ListItem.Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(thumb)) + Container.Content(episodes)">$INFO[ListItem.Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(Thumb))">$INFO[ListItem.Art(Thumb)]</value>
	</variable>
	<variable name="IconPoster">
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
	</variable>
	<variable name="IconSquare">
		<value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
	</variable>
	<variable name="MainListLabel">
		<value condition="String.StartsWith(ListItem.Path,pvr://)">$INFO[ListItem.Title]</value>
		<value condition="String.IsEqual(ListItem.DBType,episode)">$INFO[ListItem.Season,S,:]$INFO[ListItem.Episode,E, ]$INFO[ListItem.Title]</value>
		<value condition="String.IsEqual(ListItem.DBType,season) + !String.IsEmpty(ListItem.Season)">$INFO[ListItem.Season,$LOCALIZE[20373] ]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="SubListLabel">
		<value condition="String.StartsWith(ListItem.Path,pvr://)">$INFO[ListItem.Label]</value>
		<value condition="String.IsEqual(ListItem.DBType,episode)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="String.IsEqual(ListItem.DBType,season)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="String.IsEqual(ListItem.DBType,movie)">$INFO[ListItem.Year]</value>
		<value condition="String.IsEqual(ListItem.DBType,tvshow)">$INFO[ListItem.Year]</value>
	</variable>
	<variable name="VisibleContainer">
		<value condition="Control.IsVisible(50)">50</value>
		<value condition="Control.IsVisible(51)">51</value>
		<value condition="Control.IsVisible(52)">52</value>
		<value condition="Control.IsVisible(53)">53</value>
		<value condition="Control.IsVisible(54)">54</value>
		<value condition="Control.IsVisible(55)">55</value>
	</variable>
	<variable name="ListItemResolution">
		<value condition="Integer.IsLess(ListItem.VideoResolution,710)">SD</value>
		<value condition="[Integer.IsGreater(ListItem.VideoResolution,710) + !Integer.IsGreater(ListItem.VideoResolution,730)]">720p</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,1080)">1080p</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,4K)">4K</value>
	</variable>
	<variable name="ListItemAudio">
		<value condition="Integer.IsEqual(ListItem.AudioChannels,1)">Mono</value>
		<value condition="Integer.IsEqual(ListItem.AudioChannels,2)">Stereo</value>
		<value condition="Integer.IsGreater(ListItem.AudioChannels,2) + !String.Contains(ListItem.AudioCodec,dtshd) + [String.Contains(ListItem.AudioCodec,dca) | String.Contains(ListItem.AudioCodec,dts)]">DTS</value>
		<value condition="Integer.IsGreater(ListItem.AudioChannels,2) + String.Contains(ListItem.AudioCodec,dtshd)">DTS-HD</value>
		<value condition="Integer.IsGreater(ListItem.AudioChannels,2) + String.Contains(ListItem.AudioCodec,ac3) + !String.Contains(ListItem.AudioCodec,eac3)">Dolby</value>
		<value condition="Integer.IsGreater(ListItem.AudioChannels,2) + String.Contains(ListItem.AudioCodec,eac3)">Dolby+</value>
		<value condition="Integer.IsGreater(ListItem.AudioChannels,2) + String.Contains(ListItem.AudioCodec,truehd)">TrueHD</value>
		<value condition="Integer.IsGreater(ListItem.AudioChannels,2) + !String.Contains(ListItem.AudioCodec,ac3) + !String.Contains(ListItem.AudioCodec,truehd) + !String.Contains(ListItem.AudioCodec,dts) + !String.Contains(ListItem.AudioCodec,dca)">Multi Ch.</value>
	</variable>
	<variable name="VideoInfoButton8">
		<value condition="!String.IsEqual(ListItem.DBType,tvshow) + !String.IsEqual(ListItem.DBType,season) + ListItem.IsResumable">$LOCALIZE[13404]</value>
		<value condition="!String.IsEqual(ListItem.DBType,tvshow) + !String.IsEqual(ListItem.DBType,season) + Integer.IsGreater(ListItem.PlayCount,0)">$LOCALIZE[31009]</value>
		<value condition="!String.IsEqual(ListItem.DBType,tvshow) + !String.IsEqual(ListItem.DBType,season)">$LOCALIZE[31010]</value>
		<value>$LOCALIZE[31011]</value>
	</variable>
	<variable name="TinyInfoDialogPlot">
		<value condition="String.IsEqual(ListItem.DBType,Episode)">[B]$INFO[ListItem.TvShowTitle,,[CR]]$INFO[ListItem.Season,S,:]$INFO[ListItem.Episode,E, ]$INFO[ListItem.Title,,[CR][CR]][/B]$INFO[ListItem.Duration,$LOCALIZE[180]: , $LOCALIZE[12391][CR][CR]]$INFO[ListItem.Plot]</value>
		<value condition="String.IsEqual(ListItem.DBType,Season)">$INFO[ListItem.TVShowTitle,[B],[/B][CR][CR]]$INFO[ListItem.Plot]</value>
		<value condition="String.IsEqual(ListItem.DBType,TVShow)">$INFO[ListItem.TVShowTitle,[B],[/B][CR][CR]]$INFO[ListItem.Plot]</value>
		<value>$INFO[ListItem.Title,[B],[/B][CR][CR]]$INFO[ListItem.Plot]</value>
	</variable>
	<variable name="PVRTimerIcon">
		<value condition="ListItem.IsRecording">icons/pvr/PVR-IsRecording.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasError">icons/pvr/PVR-HasTimerScheduleError.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasError">icons/pvr/PVR-HasTimerError.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasConflict">icons/pvr/PVR-HasTimerScheduleConflict.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasConflict">icons/pvr/PVR-HasTimerConflict.png</value>
		<value condition="ListItem.HasRecording">icons/pvr/PVR-HasRecording.png</value>
		<value condition="ListItem.HasTimerSchedule + !ListItem.TimerIsActive">icons/pvr/PVR-HasTimerScheduleDisabled.png</value>
		<value condition="ListItem.HasTimer + !ListItem.TimerIsActive">icons/pvr/PVR-HasTimerDisabled.png</value>
		<value condition="ListItem.HasTimerSchedule">icons/pvr/PVR-HasTimerSchedule.png</value>
		<value condition="ListItem.HasTimer">icons/pvr/PVR-HasTimer.png</value>
	</variable>
	<variable name="TuneInLabel">
		<value condition="VideoPlayer.Content(livetv)">$LOCALIZE[19165]</value>
		<value>$LOCALIZE[31020]</value>
	</variable>
</includes>