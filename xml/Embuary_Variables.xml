<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!-- Embcon widget vars -->
	<variable name="EmbyCon_InProgressMedia">
		<value condition="[System.HasAddon(plugin.video.embycon) + !Skin.HasSetting(HideEmbyConWidgets)]">plugin://plugin.video.embycon/?mode=WIDGET_CONTENT&amp;type=inprogress_movies</value>
	</variable>
	<variable name="EmbyCon_InProgressMovies">
		<value condition="[System.HasAddon(plugin.video.embycon) + !Skin.HasSetting(HideEmbyConWidgets)]">plugin://plugin.video.embycon/?mode=WIDGET_CONTENT&amp;type=inprogress_movies</value>
	</variable>
	<variable name="EmbyCon_InProgressShows">
		<value condition="[System.HasAddon(plugin.video.embycon) + !Skin.HasSetting(HideEmbyConWidgets)]">plugin://plugin.video.embycon/?mode=WIDGET_CONTENT&amp;type=inprogress_episodes</value>
	</variable>
	<variable name="EmbyCon_NextUpEpisodes">
		<value condition="[System.HasAddon(plugin.video.embycon) + !Skin.HasSetting(HideEmbyConWidgets)]">plugin://plugin.video.embycon/?mode=WIDGET_CONTENT&amp;type=nextup_episodes</value>
	</variable>
	<variable name="EmbyCon_RecentMovies">
		<value condition="[System.HasAddon(plugin.video.embycon) + !Skin.HasSetting(HideEmbyConWidgets)]">plugin://plugin.video.embycon/?mode=WIDGET_CONTENT&amp;type=recent_movies</value>
	</variable>
	<variable name="EmbyCon_RecentEpisodes">
		<value condition="[System.HasAddon(plugin.video.embycon) + !Skin.HasSetting(HideEmbyConWidgets)]">plugin://plugin.video.embycon/?mode=WIDGET_CONTENT&amp;type=recent_episodes</value>
	</variable>
	<variable name="EmbyCon_MovieGenres">
		<value condition="[System.HasAddon(plugin.video.embycon) + !Skin.HasSetting(HideEmbyConWidgets)]">plugin://plugin.video.embycon/?mode=MOVIE_GENRA</value>
	</variable>
	<variable name="EmbyCon_TVShowGenres">
		<value condition="[System.HasAddon(plugin.video.embycon) + !Skin.HasSetting(HideEmbyConWidgets)]">plugin://plugin.video.embycon/?mode=MOVIE_GENRA</value>
	</variable>
	<variable name="EmbyCon_Movies">
		<value condition="[System.HasAddon(plugin.video.embycon) + !Skin.HasSetting(HideEmbyConWidgets)]">plugin://plugin.video.embycon/?item_type=Movie&amp;media_type=Movies&amp;mode=SHOW_CONTENT</value>
	</variable>
	<variable name="EmbyCon_TVShows">
		<value condition="[System.HasAddon(plugin.video.embycon) + !Skin.HasSetting(HideEmbyConWidgets)]">plugin://plugin.video.embycon/?item_type=tvshows&amp;media_type=Movies&amp;mode=SHOW_CONTENT</value>
	</variable>
	<variable name="EmbyCon_SimilarMovies">
		<value condition="[System.HasAddon(plugin.video.embycon) + !Skin.HasSetting(HideEmbyConWidgets)]">plugin://plugin.video.embycon?mode=WIDGET_CONTENT_SUGGESTIONS</value>
	</variable>
	<variable name="EmbyCon_SimilarTVShows">
		<value condition="[System.HasAddon(plugin.video.embycon) + !Skin.HasSetting(HideEmbyConWidgets)]">plugin://plugin.video.embycon?mode=WIDGET_CONTENT_SUGGESTIONS</value>
	</variable>
	<!-- Embcon/Native DB vars -->
	<variable name="View55_Cast_Content">
		<value condition="String.StartsWith(ListItem.Path,plugin://plugin.video.embycon)">plugin://plugin.video.embycon?mode=WIDGET_CONTENT_CAST&amp;id=$INFO[Window(home).Property(EmbyID)]</value>
		<value>plugin://script.skin.helper.service/?action=getcast&amp;tvshow=$INFO[Window(home).Property(TVShowDBID)]</value>
	</variable>
	<variable name="View54_Cast_Content">
		<value condition="String.StartsWith(ListItem.Path,plugin://plugin.video.embycon)">plugin://plugin.video.embycon?mode=WIDGET_CONTENT_CAST&amp;id=$INFO[Window(home).Property(EmbyID)]</value>
		<value>plugin://script.skin.helper.service/?action=getcast&amp;tvshow=$INFO[Window(home).Property(TVShowDBID)]</value>
	</variable>
	<variable name="View54_NextUp_Content">
		<value condition="String.StartsWith(ListItem.Path,plugin://plugin.video.embycon)">plugin://plugin.video.embycon?mode=WIDGET_CONTENT_NEXTUP&amp;id=$INFO[Window(home).Property(EmbyID)]</value>
		<value>videodb://inprogresstvshows/$INFO[Window(home).Property(TVShowDBID)]/-2/?tvshowid=$INFO[Window(home).Property(TVShowDBID)]</value>
	</variable>
	<variable name="InfoDialog_NextUp_Content">
		<value condition="String.StartsWith(ListItem.Path,plugin://plugin.video.embycon)">plugin://plugin.video.embycon?mode=WIDGET_CONTENT_NEXTUP&amp;id=$INFO[ListItem.Property(id)]</value>
		<value>videodb://inprogresstvshows/$INFO[ListItem.DBID]/-2/?tvshowid=$INFO[ListItem.DBID]</value>
	</variable>
	<variable name="View55_MoreLikeThis_Content">
		<value condition="String.StartsWith(ListItem.Path,plugin://plugin.video.embycon)">plugin://plugin.video.embycon?mode=WIDGET_CONTENT_SIMILAR&amp;id=$INFO[Window(home).Property(EmbyID)]</value>
		<value>plugin://script.skin.helper.widgets/?action=similarshows&amp;imdbid=$INFO[Window(home).Property(TVShowIMDB)]</value>
	</variable>
	<variable name="View54_MoreLikeThis_Content">
		<value condition="String.StartsWith(ListItem.Path,plugin://plugin.video.embycon)">plugin://plugin.video.embycon?mode=WIDGET_CONTENT_SIMILAR&amp;id=$INFO[Window(home).Property(EmbyID)]</value>
		<value>plugin://script.skin.helper.widgets/?action=similarshows&amp;imdbid=$INFO[Window(home).Property(TVShowIMDB)]</value>
	</variable>
	<variable name="InfoDialog_MoreLikeThis_Content">
		<value condition="String.StartsWith(ListItem.Path,plugin://plugin.video.embycon)">plugin://plugin.video.embycon?mode=WIDGET_CONTENT_SIMILAR&amp;id=$INFO[ListItem.Property(id)]</value>
		<value condition="String.IsEqual(ListItem.DBType,movie)">plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=movies&amp;imdbid=$INFO[ListItem.IMDBNumber]</value>
		<value>plugin://script.skin.helper.widgets/?action=similarshows&amp;imdbid=$INFO[ListItem.IMDBNumber]</value>
	</variable>

	<variable name="BackgroundSource">
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value>$INFO[Container(90000).ListItem.Art(fanart)]</value>
	</variable>
	<variable name="DefaultIcon">
		<!--folder-->
		<value condition="true"></value>
	</variable>
	<variable name="FakeButtonAddonInfo13">
		<value condition="String.EndsWith(Control.GetLabel(13),(*))">$LOCALIZE[19074]</value>
		<value>$LOCALIZE[351]</value>
	</variable>
	<variable name="ContainerContent">
		<value condition="Window.IsVisible(smartplaylisteditor)">$LOCALIZE[10136]</value>
		<value condition="Window.IsVisible(DialogPVRChannelManager.xml)">$LOCALIZE[19199]</value>
		<value condition="Window.IsVisible(skinsettings)">$LOCALIZE[31058]</value>
		<value condition="Window.IsVisible(filemanager)">$LOCALIZE[7]</value>
		<value condition="Window.IsVisible(musicplaylist)">$LOCALIZE[10500]</value>
		<value condition="Window.IsVisible(videoplaylist)">$LOCALIZE[10028]</value>
		<value condition="Window.IsVisible(videobookmarks)">$LOCALIZE[298]</value>
		<value condition="Window.IsVisible(systeminfo)">$LOCALIZE[138]</value>
		<value condition="Window.IsVisible(profiles)">$LOCALIZE[10130]</value>
		<value condition="Window.IsVisible(script-globalsearch-main.xml)">$LOCALIZE[283]</value>
		<value condition="Window.IsVisible(DialogFullScreenInfo.xml) + VideoPlayer.Content(livetv)">$LOCALIZE[19166]</value>
		<value condition="Window.IsVisible(DialogFullScreenInfo.xml) + VideoPlayer.Content(movies)">$LOCALIZE[10524]</value>
		<value condition="Window.IsVisible(DialogFullScreenInfo.xml) + VideoPlayer.Content(episodes)">$LOCALIZE[20352]</value>
		<value condition="Window.IsVisible(DialogAddonSettings.xml)">$INFO[Control.GetLabel(20)]</value>
		<value condition="Window.IsVisible(SettingsCategory.xml)">$LOCALIZE[5]: $INFO[Control.GetLabel(2)]</value>
		<value condition="Window.IsVisible(Settings.xml)">$LOCALIZE[5]</value>
		<value condition="Window.IsVisible(1120)">$LOCALIZE[342]</value>
		<value condition="Window.IsVisible(1121)">$LOCALIZE[20343]</value>
		<value condition="Window.IsVisible(1122)">$LOCALIZE[2]</value>
		<value condition="Window.IsVisible(1123)">$LOCALIZE[24001]</value>
		<value condition="Window.IsVisible(1124)">$LOCALIZE[14204]</value>
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(ListItem.DBType,album)">$LOCALIZE[10523]</value>
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(ListItem.DBType,artist)">$LOCALIZE[21891]</value>
		<value condition="Window.IsVisible(movieinformation) + String.IsEqual(ListItem.DBType,tvshow)">$LOCALIZE[20351]</value>
		<value condition="Window.IsVisible(movieinformation) + String.IsEqual(ListItem.DBType,movie)">$LOCALIZE[10524]</value>
		<value condition="!String.IsEmpty(Container.ShowTitle)">$INFO[Container.ShowTitle]</value>
		<value condition="Window.IsVisible(MyPVRGuide.xml)">$LOCALIZE[19069]</value>
		<value condition="Window.IsVisible(MyPVRRecordings.xml)">$LOCALIZE[19017]</value>
		<value condition="String.StartsWith(Container.FolderPath,videodb://movies)">$LOCALIZE[342]</value>
		<value condition="String.StartsWith(Container.FolderPath,videodb://tvshows)">$LOCALIZE[20343]</value>
		<value condition="String.StartsWith(Container.FolderPath,musicdb://)">$LOCALIZE[2]</value>
		<value>$INFO[Container.Foldername]</value>
	</variable>
	<variable name="ListItemClearlogo">
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(EmbyTVShowClearlogo))">$INFO[Window(home).Property(EmbyTVShowClearlogo)]</value>
	</variable>
	<variable name="SeasonViewPlot">
		<value condition="!String.IsEmpty(Window(home).Property(EmbyTVShowPlot)) + String.StartsWith(ListItem.Path,plugin://plugin.video.embycon)">$INFO[Window(home).Property(EmbyTVShowPlot)]</value>
		<value condition="!String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
	</variable>
	<variable name="IconLandscape">
		<value condition="Window.IsVisible(videobookmarks) + !String.StartsWith(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
		<value condition="[[Control.IsVisible(54) + Container.Content(seasons)] | Window.IsVisible(movieinformation) | [Window.IsVisible(videoplaylist) + String.IsEqual(ListItem.DBType,episode)]] + !String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value condition="[[Control.IsVisible(54) + Container.Content(seasons)] | Window.IsVisible(movieinformation) | Window.IsVisible(videoplaylist)] + !String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
		<value condition="[[Control.IsVisible(54) + Container.Content(seasons)] | Window.IsVisible(movieinformation) | Window.IsVisible(videoplaylist)] + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="[[Control.IsVisible(54) + Container.Content(seasons)] | Window.IsVisible(movieinformation) | Window.IsVisible(videoplaylist)] + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="String.StartsWith(ListItem.Path,pvr://) + !String.StartsWith(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
		<value condition="!String.IsEmpty(ListItem.Art(thumb)) + Container.Content(episodes)">$INFO[ListItem.Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.fanart))">$INFO[ListItem.Art(tvshow.fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(Thumb))">$INFO[ListItem.Art(Thumb)]</value>
	</variable>
	<variable name="IconPoster">
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
	</variable>
	<variable name="IconSquare">
		<value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
	</variable>
	<variable name="PVRWidgetMainListLabel">
		<value condition="!String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Channelname]</value>
	</variable>
	<variable name="MainListLabel">
		<value condition="String.StartsWith(ListItem.Path,pvr://) + !String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
		<value condition="String.StartsWith(ListItem.Path,pvr://)">$INFO[ListItem.Label]</value>
		<value condition="String.IsEqual(ListItem.DBType,episode)">$INFO[ListItem.Season,S,:]$INFO[ListItem.Episode,E, ]$INFO[ListItem.Title]</value>
		<value condition="String.IsEqual(ListItem.DBType,season) + !String.IsEmpty(ListItem.Season)">$INFO[ListItem.Season,$LOCALIZE[20373] ]</value>
		<value condition="String.IsEqual(ListItem.DBType,song)">$INFO[ListItem.Tracknumber,,. ]$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="SubListLabel">
		<value condition="String.StartsWith(ListItem.Path,pvr://)">$INFO[ListItem.Label]</value>
		<value condition="String.IsEqual(ListItem.DBType,episode)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="String.IsEqual(ListItem.DBType,season)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="String.IsEqual(ListItem.DBType,movie)">$INFO[ListItem.Year]</value>
		<value condition="String.IsEqual(ListItem.DBType,tvshow)">$INFO[ListItem.Year]</value>
		<value condition="String.IsEqual(ListItem.DBType,album)">$INFO[ListItem.Artist]</value>
		<value condition="String.IsEqual(ListItem.DBType,song)">$INFO[ListItem.Artist]</value>
		<value condition="ListItem.IsParentFolder">$LOCALIZE[31044]</value>
		<value condition="[Window.IsVisible(videos) | Window.IsVisible(music) | Window.IsVisible(programs) | Window.IsVisible(MyPVRRecordings.xml) | Window.IsVisible(addonbrowser)] + ListItem.IsFolder + !ListItem.IsParentFolder">$LOCALIZE[19076]</value>
		<value condition="Window.IsVisible(addonbrowser)">$INFO[ListItem.AddonType]</value>
	</variable>
	<variable name="VisibleContainer">
		<value condition="Control.IsVisible(50)">50</value>
		<value condition="Control.IsVisible(51)">51</value>
		<value condition="Control.IsVisible(52)">52</value>
		<value condition="Control.IsVisible(53)">53</value>
		<value condition="Control.IsVisible(54)">54</value>
		<value condition="Control.IsVisible(55)">55</value>
	</variable>
	<variable name="ListItemResolution">
		<value condition="String.IsEqual(ListItem.VideoResolution,4K)">4K</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,1080)">1080p</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,720)">720p</value>
		<value>SD</value>
	</variable>
	<variable name="PlayerResolution">
		<value condition="String.IsEqual(VideoPlayer.VideoResolution,4K)">4K</value>
		<value condition="String.IsEqual(VideoPlayer.VideoResolution,1080)">1080p</value>
		<value condition="String.IsEqual(VideoPlayer.VideoResolution,720)">720p</value>
		<value>SD</value>
	</variable>
	<variable name="PlayerTime">
		<value condition="Integer.IsGreater(Player.Duration(h),0)">$INFO[Player.Time(h:mm:ss)]</value>
		<value>$INFO[Player.Time(mm:ss)]</value>
	</variable>
	<variable name="PlayerDuration">
		<value condition="Integer.IsGreater(Player.Duration(h),0)">$INFO[Player.Duration(h:mm:ss)]</value>
		<value>$INFO[Player.Duration(mm:ss)]</value>
	</variable>
	<variable name="ListItemAudio">
		<value condition="Integer.IsEqual(ListItem.AudioChannels,1)">Mono</value>
		<value condition="Integer.IsEqual(ListItem.AudioChannels,2)">Stereo</value>
		<value condition="Integer.IsGreater(ListItem.AudioChannels,2) + !String.Contains(ListItem.AudioCodec,dtshd) + [String.Contains(ListItem.AudioCodec,dca) | String.Contains(ListItem.AudioCodec,dts)]">DTS</value>
		<value condition="Integer.IsGreater(ListItem.AudioChannels,2) + String.Contains(ListItem.AudioCodec,dtshd)">DTS-HD</value>
		<value condition="Integer.IsGreater(ListItem.AudioChannels,2) + String.Contains(ListItem.AudioCodec,ac3) + !String.Contains(ListItem.AudioCodec,eac3)">Dolby</value>
		<value condition="Integer.IsGreater(ListItem.AudioChannels,2) + String.Contains(ListItem.AudioCodec,eac3)">Dolby+</value>
		<value condition="Integer.IsGreater(ListItem.AudioChannels,2) + String.Contains(ListItem.AudioCodec,truehd)">TrueHD</value>
		<value condition="Integer.IsGreater(ListItem.AudioChannels,2) + !String.Contains(ListItem.AudioCodec,ac3) + !String.Contains(ListItem.AudioCodec,truehd) + !String.Contains(ListItem.AudioCodec,dts) + !String.Contains(ListItem.AudioCodec,dca)">Multi Ch.</value>
	</variable>
	<variable name="PlayerAudio">
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,1)">Mono</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,2)">Stereo</value>
		<value condition="Integer.IsGreater(VideoPlayer.AudioChannels,2) + !String.Contains(VideoPlayer.AudioCodec,dtshd) + [String.Contains(VideoPlayer.AudioCodec,dca) | String.Contains(VideoPlayer.AudioCodec,dts)]">DTS</value>
		<value condition="Integer.IsGreater(VideoPlayer.AudioChannels,2) + String.Contains(VideoPlayer.AudioCodec,dtshd)">DTS-HD</value>
		<value condition="Integer.IsGreater(VideoPlayer.AudioChannels,2) + String.Contains(VideoPlayer.AudioCodec,ac3) + !String.Contains(VideoPlayer.AudioCodec,eac3)">Dolby</value>
		<value condition="Integer.IsGreater(VideoPlayer.AudioChannels,2) + String.Contains(VideoPlayer.AudioCodec,eac3)">Dolby+</value>
		<value condition="Integer.IsGreater(VideoPlayer.AudioChannels,2) + String.Contains(VideoPlayer.AudioCodec,truehd)">TrueHD</value>
		<value condition="Integer.IsGreater(VideoPlayer.AudioChannels,2) + !String.Contains(VideoPlayer.AudioCodec,ac3) + !String.Contains(VideoPlayer.AudioCodec,truehd) + !String.Contains(VideoPlayer.AudioCodec,dts) + !String.Contains(VideoPlayer.AudioCodec,dca)">Multi Ch.</value>
	</variable>
	<variable name="VideoInfoButton8">
		<value condition="!String.IsEqual(ListItem.DBType,tvshow) + !String.IsEqual(ListItem.DBType,season) + ListItem.IsResumable">$LOCALIZE[13404]</value>
		<value condition="!String.IsEqual(ListItem.DBType,tvshow) + !String.IsEqual(ListItem.DBType,season) + Integer.IsGreater(ListItem.PlayCount,0)">$LOCALIZE[31009]</value>
		<value condition="!String.IsEqual(ListItem.DBType,tvshow) + !String.IsEqual(ListItem.DBType,season)">$LOCALIZE[31010]</value>
		<value>$LOCALIZE[31011]</value>
	</variable>
	<variable name="TinyInfoDialogHeadline">
		<value condition="Window.IsVisible(DialogFullScreenInfo.xml) + !String.IsEmpty(VideoPlayer.TvShowTitle)">$INFO[VideoPlayer.TvShowTitle]</value>
		<value condition="!String.IsEmpty(ListItem.TvShowTitle)">$INFO[ListItem.TvShowTitle]</value>
		<value>$INFO[ListItem.Title]</value>
	</variable>
	<variable name="TinyInfoDialogPlot">
		<value condition="Window.IsVisible(DialogFullScreenInfo.xml)">$INFO[VideoPlayer.Season,S,:]$INFO[VideoPlayer.Episode,E, ]$INFO[VideoPlayer.Title,,[CR][CR]]$INFO[VideoPlayer.Duration,$LOCALIZE[180]: ,[CR][CR]]$INFO[VideoPlayer.Plot]</value>
		<value condition="String.IsEqual(ListItem.DBType,Episode)">$INFO[ListItem.Season,S,:]$INFO[ListItem.Episode,E, ]$INFO[ListItem.Title,,[CR][CR]]$INFO[ListItem.Duration,$LOCALIZE[180]: , $LOCALIZE[12391][CR][CR]]$INFO[ListItem.Plot]</value>
		<value condition="String.IsEqual(ListItem.DBType,song)">$INFO[ListItem.Duration,$LOCALIZE[180]: ,[CR][CR]]$INFO[ListItem.Artist]$INFO[ListItem.Album, - ,[CR][CR]]$INFO[ListItem.Property(Album_Description)]</value>
		<value>$INFO[ListItem.Plot]</value>
	</variable>
	<variable name="ListViewPlot">
		<value condition="Window.IsVisible(tvrecordings)">$INFO[ListItem.Plot]</value>
		<value>$INFO[ListItem.Tagline,[B],[/B][CR][CR]]$INFO[ListItem.Plot]</value>
	</variable>
	<variable name="PVRTimerIcon">
		<value condition="ListItem.IsRecording">icons/pvr/icon_recording.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasError">icons/pvr/icon_timer_error.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasError">icons/pvr/icon_record_error.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasConflict">icons/pvr/icon_timer_conflict.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasConflict">icons/pvr/PVR-HasTimerConflict.png</value>
		<value condition="ListItem.HasRecording">icons/pvr/icon_recording.png</value>
		<value condition="ListItem.HasTimerSchedule">icons/pvr/icon_timer.png</value>
		<value condition="ListItem.HasTimer">icons/pvr/icon_recording.png</value>
	</variable>
	<variable name="PVRTimerStatus">
		<value condition="!ListItem.TimerIsActive">deaktiviert</value>
		<value>aktiv</value>
	</variable>
	<variable name="TuneInLabel">
		<value condition="VideoPlayer.Content(livetv)">$LOCALIZE[19165]</value>
		<value>$LOCALIZE[31020]</value>
	</variable>
	<variable name="VolumeIconCircle">
		<value condition="Player.Muted">0</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,10)">$INFO[Control.GetLabel(404)]</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,9)">9</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,8)">8</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,7)">7</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,6)">6</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,5)">5</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,4)">4</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,3)">3</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,2)">2</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,1)">1</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,0)">0</value>
	</variable>
	<variable name="VolumeIcon">
		<value condition="Player.Muted"></value>
		<value condition="Integer.IsGreater(player.volume,75)"></value>
		<value condition="Integer.IsGreater(player.volume,25)"></value>
		<value condition="!Integer.IsGreater(player.volume,25)"></value>
	</variable>
	<variable name="VolumeDetails">
		<value condition="!Player.Muted + Integer.IsGreaterOrEqual(player.volume,10)">$INFO[Control.GetLabel(404),,%]</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,9)">9%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,8)">8%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,7)">7%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,6)">6%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,5)">5%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,4)">4%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,3)">3%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,2)">2%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,1)">1%</value>
		<value>$LOCALIZE[31043]</value>
	</variable>
	<variable name="ExtendedProgressCircle">
		<value condition="String.IsEqual(Control.GetLabel(32),100)">100</value>
		<value condition="String.IsEqual(Control.GetLabel(32),99)">99</value>
		<value condition="String.IsEqual(Control.GetLabel(32),98)">98</value>
		<value condition="String.IsEqual(Control.GetLabel(32),97)">97</value>
		<value condition="String.IsEqual(Control.GetLabel(32),96)">96</value>
		<value condition="String.IsEqual(Control.GetLabel(32),95)">95</value>
		<value condition="String.IsEqual(Control.GetLabel(32),94)">94</value>
		<value condition="String.IsEqual(Control.GetLabel(32),93)">93</value>
		<value condition="String.IsEqual(Control.GetLabel(32),92)">92</value>
		<value condition="String.IsEqual(Control.GetLabel(32),91)">91</value>
		<value condition="String.IsEqual(Control.GetLabel(32),90)">90</value>
		<value condition="String.IsEqual(Control.GetLabel(32),89)">89</value>
		<value condition="String.IsEqual(Control.GetLabel(32),88)">88</value>
		<value condition="String.IsEqual(Control.GetLabel(32),87)">87</value>
		<value condition="String.IsEqual(Control.GetLabel(32),86)">86</value>
		<value condition="String.IsEqual(Control.GetLabel(32),85)">85</value>
		<value condition="String.IsEqual(Control.GetLabel(32),84)">84</value>
		<value condition="String.IsEqual(Control.GetLabel(32),83)">83</value>
		<value condition="String.IsEqual(Control.GetLabel(32),82)">82</value>
		<value condition="String.IsEqual(Control.GetLabel(32),81)">81</value>
		<value condition="String.IsEqual(Control.GetLabel(32),80)">80</value>
		<value condition="String.IsEqual(Control.GetLabel(32),79)">79</value>
		<value condition="String.IsEqual(Control.GetLabel(32),78)">78</value>
		<value condition="String.IsEqual(Control.GetLabel(32),77)">77</value>
		<value condition="String.IsEqual(Control.GetLabel(32),76)">76</value>
		<value condition="String.IsEqual(Control.GetLabel(32),75)">75</value>
		<value condition="String.IsEqual(Control.GetLabel(32),74)">74</value>
		<value condition="String.IsEqual(Control.GetLabel(32),73)">73</value>
		<value condition="String.IsEqual(Control.GetLabel(32),72)">72</value>
		<value condition="String.IsEqual(Control.GetLabel(32),71)">71</value>
		<value condition="String.IsEqual(Control.GetLabel(32),70)">70</value>
		<value condition="String.IsEqual(Control.GetLabel(32),69)">69</value>
		<value condition="String.IsEqual(Control.GetLabel(32),68)">68</value>
		<value condition="String.IsEqual(Control.GetLabel(32),67)">67</value>
		<value condition="String.IsEqual(Control.GetLabel(32),66)">66</value>
		<value condition="String.IsEqual(Control.GetLabel(32),65)">65</value>
		<value condition="String.IsEqual(Control.GetLabel(32),64)">64</value>
		<value condition="String.IsEqual(Control.GetLabel(32),63)">63</value>
		<value condition="String.IsEqual(Control.GetLabel(32),62)">62</value>
		<value condition="String.IsEqual(Control.GetLabel(32),61)">61</value>
		<value condition="String.IsEqual(Control.GetLabel(32),60)">60</value>
		<value condition="String.IsEqual(Control.GetLabel(32),59)">59</value>
		<value condition="String.IsEqual(Control.GetLabel(32),58)">58</value>
		<value condition="String.IsEqual(Control.GetLabel(32),57)">57</value>
		<value condition="String.IsEqual(Control.GetLabel(32),56)">56</value>
		<value condition="String.IsEqual(Control.GetLabel(32),55)">55</value>
		<value condition="String.IsEqual(Control.GetLabel(32),54)">54</value>
		<value condition="String.IsEqual(Control.GetLabel(32),53)">53</value>
		<value condition="String.IsEqual(Control.GetLabel(32),52)">52</value>
		<value condition="String.IsEqual(Control.GetLabel(32),51)">51</value>
		<value condition="String.IsEqual(Control.GetLabel(32),50)">50</value>
		<value condition="String.IsEqual(Control.GetLabel(32),49)">49</value>
		<value condition="String.IsEqual(Control.GetLabel(32),48)">48</value>
		<value condition="String.IsEqual(Control.GetLabel(32),47)">47</value>
		<value condition="String.IsEqual(Control.GetLabel(32),46)">46</value>
		<value condition="String.IsEqual(Control.GetLabel(32),45)">45</value>
		<value condition="String.IsEqual(Control.GetLabel(32),44)">44</value>
		<value condition="String.IsEqual(Control.GetLabel(32),43)">43</value>
		<value condition="String.IsEqual(Control.GetLabel(32),42)">42</value>
		<value condition="String.IsEqual(Control.GetLabel(32),41)">41</value>
		<value condition="String.IsEqual(Control.GetLabel(32),40)">40</value>
		<value condition="String.IsEqual(Control.GetLabel(32),39)">39</value>
		<value condition="String.IsEqual(Control.GetLabel(32),38)">38</value>
		<value condition="String.IsEqual(Control.GetLabel(32),37)">37</value>
		<value condition="String.IsEqual(Control.GetLabel(32),36)">36</value>
		<value condition="String.IsEqual(Control.GetLabel(32),35)">35</value>
		<value condition="String.IsEqual(Control.GetLabel(32),34)">34</value>
		<value condition="String.IsEqual(Control.GetLabel(32),33)">33</value>
		<value condition="String.IsEqual(Control.GetLabel(32),32)">32</value>
		<value condition="String.IsEqual(Control.GetLabel(32),31)">31</value>
		<value condition="String.IsEqual(Control.GetLabel(32),30)">30</value>
		<value condition="String.IsEqual(Control.GetLabel(32),29)">29</value>
		<value condition="String.IsEqual(Control.GetLabel(32),28)">28</value>
		<value condition="String.IsEqual(Control.GetLabel(32),27)">27</value>
		<value condition="String.IsEqual(Control.GetLabel(32),26)">26</value>
		<value condition="String.IsEqual(Control.GetLabel(32),25)">25</value>
		<value condition="String.IsEqual(Control.GetLabel(32),24)">24</value>
		<value condition="String.IsEqual(Control.GetLabel(32),23)">23</value>
		<value condition="String.IsEqual(Control.GetLabel(32),22)">22</value>
		<value condition="String.IsEqual(Control.GetLabel(32),21)">21</value>
		<value condition="String.IsEqual(Control.GetLabel(32),20)">20</value>
		<value condition="String.IsEqual(Control.GetLabel(32),19)">19</value>
		<value condition="String.IsEqual(Control.GetLabel(32),18)">18</value>
		<value condition="String.IsEqual(Control.GetLabel(32),17)">17</value>
		<value condition="String.IsEqual(Control.GetLabel(32),16)">16</value>
		<value condition="String.IsEqual(Control.GetLabel(32),15)">15</value>
		<value condition="String.IsEqual(Control.GetLabel(32),14)">14</value>
		<value condition="String.IsEqual(Control.GetLabel(32),13)">13</value>
		<value condition="String.IsEqual(Control.GetLabel(32),12)">12</value>
		<value condition="String.IsEqual(Control.GetLabel(32),11)">11</value>
		<value condition="String.IsEqual(Control.GetLabel(32),10)">10</value>
		<value condition="String.EndsWith(Control.GetLabel(32),9)">9</value>
		<value condition="String.EndsWith(Control.GetLabel(32),8)">8</value>
		<value condition="String.EndsWith(Control.GetLabel(32),7)">7</value>
		<value condition="String.EndsWith(Control.GetLabel(32),6)">6</value>
		<value condition="String.EndsWith(Control.GetLabel(32),5)">5</value>
		<value condition="String.EndsWith(Control.GetLabel(32),4)">4</value>
		<value condition="String.EndsWith(Control.GetLabel(32),3)">3</value>
		<value condition="String.EndsWith(Control.GetLabel(32),2)">2</value>
		<value condition="String.EndsWith(Control.GetLabel(32),1)">1</value>
	</variable>
	<variable name="ListItemDuration">
		<value condition="String.Contains(ListItem.Duration,:)">$INFO[ListItem.Duration]</value>
		<value>$INFO[ListItem.Duration,, $LOCALIZE[12391]]</value>
	</variable>
	<variable name="PlayerFullLabel">
		<value condition="!String.IsEmpty(MusicPlayer.Title) + !String.Contains(MusicPlayer.Title,pvr.hts_)">$INFO[MusicPlayer.Artist,, - ]$INFO[MusicPlayer.Tracknumber,,. ]$INFO[MusicPlayer.Title]</value>
		<value condition="!String.IsEmpty(MusicPlayer.Title)">$INFO[MusicPlayer.Artist]</value>
		<value condition="VideoPlayer.Content(livetv)">$INFO[VideoPlayer.Channelnumber,,. ]$INFO[VideoPlayer.ChannelName]$INFO[VideoPlayer.Title, - ]</value>
		<value condition="!String.IsEmpty(VideoPlayer.TVShowTitle)">$INFO[VideoPlayer.Season,S,:]$INFO[VideoPlayer.Episode,E, - ]$INFO[VideoPlayer.Title]</value>
		<value>$INFO[VideoPlayer.Title]</value>
	</variable>
	<variable name="PlayerTitleLabel">
		<value condition="!String.IsEmpty(MusicPlayer.Title)">$INFO[MusicPlayer.Title]</value>
		<value condition="!String.IsEmpty(VideoPlayer.TVShowTitle)">$INFO[VideoPlayer.TVShowTitle]</value>
		<value>$INFO[VideoPlayer.Title]</value>
	</variable>
	<variable name="PlayerClearlogo">
		<value condition="!String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.clearlogo)]</value>
		<value condition="!String.IsEmpty(Player.Art(poster))">$INFO[Player.Art(clearlogo)]</value>
	</variable>
	<variable name="PlayerTimeLabels">
		<value condition="!Pvr.IsTimeShift + Player.HasVideo">$VAR[PlayerTime]$VAR[PlayerDuration, / ]$INFO[Player.FinishTime,  -  $LOCALIZE[31037] ]</value>
		<value>$VAR[PlayerTime]$VAR[PlayerDuration, / ]</value>
	</variable>
	<variable name="PlayerIcon">
		<value condition="!String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
		<value condition="!String.IsEmpty(VideoPlayer.Cover)">$INFO[VideoPlayer.Cover]</value>
		<value condition="!String.IsEmpty(MusicPlayer.Cover)">$INFO[MusicPlayer.Cover]</value>
	</variable>
	<variable name="PlayerCastContent">
		<value condition="VideoPlayer.Content(episodes)">plugin://script.skin.helper.service/?action=getcast&amp;tvshow=$INFO[VideoPlayer.TvShowTitle]</value>
		<value>plugin://script.skin.helper.service/?action=getcast&amp;movie=$INFO[VideoPlayer.DBID]</value>
	</variable>
	<variable name="PlayerSimilarContent">
		<value condition="VideoPlayer.Content(episodes)">plugin://script.skin.helper.widgets/?action=similarshows&amp;imdbid=$INFO[VideoPlayer.IMDBNumber]</value>
		<value>plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=movies&amp;imdbid=$INFO[VideoPlayer.IMDBNumber]</value>
	</variable>
	<variable name="PlayerForwardRewind">
		<value condition="Player.Forwarding4x">4x</value>
		<value condition="Player.Forwarding8x">8x</value>
		<value condition="Player.Forwarding16x">16x</value>
		<value condition="Player.Forwarding32x">32x</value>
		<value condition="Player.Rewinding4x">4x</value>
		<value condition="Player.Rewinding8x">8x</value>
		<value condition="Player.Rewinding16x">16x</value>
		<value condition="Player.Rewinding32x">32x</value>
	</variable>
	<variable name="PlayerSeekStepIcon">
		<value condition="[!String.IsEmpty(Player.SeekOffset) + !String.Contains(Player.SeekOffset,-)] | [!String.IsEmpty(Player.SeekStepSize) + !String.Contains(Player.SeekStepSize,-)]"></value>
		<value condition="[!String.IsEmpty(Player.SeekOffset) + String.Contains(Player.SeekOffset,-)] | [!String.IsEmpty(Player.SeekStepSize) + String.Contains(Player.SeekStepSize,-)]"></value>
	</variable>
	<variable name="PlayerSeekStepLabel">
		<value condition="!String.IsEmpty(Player.SeekStepSize)">$INFO[Player.SeekStepSize]</value>
		<value condition="!String.IsEmpty(Player.SeekOffset)">$INFO[Player.SeekOffset]</value>
	</variable>
	<variable name="PlaylistShuffleButtonLabel">
		<value condition="Playlist.IsRandom">$LOCALIZE[16041]</value>
		<value>$LOCALIZE[351]</value>
	</variable>
	<variable name="PlaylistRepeatButtonLabel">
		<value condition="Playlist.IsRepeatOne">$LOCALIZE[31053]</value>
		<value condition="Playlist.IsRepeat">$LOCALIZE[16041]</value>
		<value>$LOCALIZE[351]</value>
	</variable>
	<variable name="PlayerVisualisationEnabledButton">
		<value condition="Visualisation.Enabled">$LOCALIZE[16041]</value>
		<value>$LOCALIZE[351]</value>
	</variable>
	<variable name="PlayerFanartEnabledButton">
		<value condition="!Skin.HasSetting(VisFanartDisabled)">$LOCALIZE[16041]</value>
		<value>$LOCALIZE[351]</value>
	</variable>
	<variable name="PlayerRandomFanartEnabledButton">
		<value condition="!Skin.HasSetting(VisRandomFanart)">$LOCALIZE[16041]</value>
		<value>$LOCALIZE[351]</value>
	</variable>
	<variable name="PlaylistRepeatLabel">
		<value condition="Playlist.IsRepeatOne"></value>
		<value condition="Playlist.IsRepeat"></value>
	</variable>
	<variable name="PlaylistRepeatButtonColor">
		<value condition="Playlist.IsRepeatOne | Playlist.IsRepeat | Control.HasFocus(613)">emby</value>
	</variable>
	<variable name="VideoHWDecoder">
		<value condition="Player.Process(videohwdecoder)">HW</value>
		<value>SW</value>
	</variable>
	<variable name="PVRChannelMgrHeader">
		<value condition="!String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19199] - $LOCALIZE[19024]</value>
		<value>$LOCALIZE[19199] - $LOCALIZE[19023]</value>
	</variable>
</includes>